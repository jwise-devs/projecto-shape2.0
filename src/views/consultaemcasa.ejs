<!DOCTYPE html>
<html lang="en">
<%- include('includes/head') %>
    <title>Consulta Em Casa</title>

    <body>
        <style>
            .tax {
                color: #007d7b;
                font-size: 2em;
            }

            .tax-list {
                font-size: 1em;
                font-weight: 500;
            }
        </style>
        <%- include('includes/navbar') %>
            <div class="container">
                <div class="row">
                    <div class="col-lg-2"></div>

                    <div class="col-lg-8 my-2">
                        <a href="/">
                            <h1 class="text-center"><img src="/assets/img/house.png" alt="" class="img-fluid"
                                    style='width: 250px; height: 250px; object-fit: cover;margin-bottom: 20px;'></h1>
                        </a>

                        <h1 class="text-center">Agendamento</h1>
                        <p class="text-center lead">Todos os tratamentos ao domicilio devem ser solicitados com minimo
                            de 24 horas de antecendencia</p>

                        <h2 class="tax">Taxas</h2>
                        <ul class="tax-list">
                            <li>Maputo 300MT</li>
                            <li>Matola 500MT</li>
                            <li>Arredores de Maputo 700MT</li>
                        </ul>

                        <!-- Área para exibir mensagens -->
                        <div id="flashMessage"></div>

                        <%- include('includes/messeges') %>

                            <div class="row">
                                <div class="col-lg my-5">
                                  <form id="consultaEmCasaForm" action="/consultaemcasa/solicitar" method="POST">
    <input type="hidden" name="_csrf" value="<%= csrfToken %>">

    <!-- Campo de localização (link com coordenadas) -->
    <div class="mb-3">
        <label class="form-label">Sua Localização</label>
        <input type="text" class="form-control" name="localizacao" id="localizacao" readonly>
    </div>

    <!-- Campo da taxa calculada -->
    <div class="mb-3">
        <label class="form-label">Taxa</label>
        <input type="text" class="form-control" name="taxa" id="taxa" readonly>
    </div>

    <!-- Mapa interativo -->
    <div id="map" style="height: 400px; width: 100%; margin-bottom: 1rem; border: 1px solid #ccc;"></div>

    <!-- Botões -->
    <!-- <div class="text-center">
        <button type="submit" class="btn btn-success mt-3"
            style="background-color: #007d7b; border-color: #007d7b;">
            Confirmar Localização
        </button>
    </div> -->

    <!-- PACOTES -->
    <div class="container mt-4">
        <label for="pacote" class="form-label">Pacote</label>
        <select class="form-select" id="pacote" name="pacote">
            <option value="" disabled selected>Selecione uma categoria</option>
            <% pacotes.forEach(pacote => { %>
                <option value="<%= pacote %>"><%= pacote %></option>
            <% }); %>
        </select>
    </div>

    <!-- SUBPACOTES -->
    <div class="mb-3 d-none container mt-4" id="subpacote-container">
        <label for="subpacote" class="form-label">Subpacote</label>
        <select class="form-select" id="subpacote" name="subpacote">
            <option value="" disabled selected>Selecione uma subcategoria</option>
        </select>
    </div>

    <!-- TRATAMENTOS -->
    <div class="container mt-5" id="tratamentos-container">
        <label for="tratamentos" class="form-label">Tratamento</label>
        <select class="form-select" id="tratamentos" name="tratamentos[]" multiple disabled>
            <option value="" disabled>Selecione um pacote primeiro</option>
        </select>
        <div class="form-text">Segure CTRL (ou CMD) para selecionar vários produtos.</div>
    </div>

    <input type="hidden" name="preco_tratamentos" id="preco_tratamentos">
    <div id="tratamentosData" data-tratamentos='<%= JSON.stringify(tratamentos) %>' style="display: none;"></div>
    <p class="mt-3"><strong>Total: <span id="precoTotal">0.00</span></strong> MT</p>

    <!-- BOTÃO FINAL -->
    <div class="text-center my-4">
        <button type="submit" class="btn btn-success px-5 py-2"
            style="background-color: #007d7b; border-color: #007d7b; font-size: 1.2rem; width: 300px;">
            Solicitar Serviço
        </button>
    </div>
</form>



                                </div>
                            </div>
                    </div>

                    <div class="col-lg-2"></div>
                </div>
            </div>
            <%- include('includes/script') %>


                <!-- Script para pegar a localização via JavaScript -->
                <script>
                    let map;
let marker;

function initMap() {
    const defaultPosition = { lat: -25.9653, lng: 32.5832 }; // Centro de Maputo

    map = new google.maps.Map(document.getElementById("map"), {
        center: defaultPosition,
        zoom: 14,
    });

    marker = new google.maps.Marker({
        position: defaultPosition,
        map: map,
        draggable: true,
    });

    // Atualiza campos quando o marcador é arrastado
    marker.addListener('dragend', () => {
        const pos = marker.getPosition();
        updateLocationFields(pos.lat(), pos.lng());
    });

    // Atualiza marcador e campos quando usuário clicar no mapa
    map.addListener('click', (event) => {
        const clickedLocation = event.latLng;
        marker.setPosition(clickedLocation);
        updateLocationFields(clickedLocation.lat(), clickedLocation.lng());
    });

    // Geolocalização automática
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function (position) {
            const userPos = {
                lat: position.coords.latitude,
                lng: position.coords.longitude
            };
            map.setCenter(userPos);
            marker.setPosition(userPos);
            updateLocationFields(userPos.lat, userPos.lng);
        }, function (error) {
            alert("Erro ao obter a localização: " + error.message);
        }, {
            enableHighAccuracy: true
        });
    } else {
        alert("Geolocalização não é suportada neste navegador.");
    }
}

async function updateLocationFields(lat, lng) {
    const mapsLink = `https://www.google.com/maps?q=${lat},${lng}`;
    document.getElementById("localizacao").value = `${mapsLink} (Lat: ${lat.toFixed(5)}, Lng: ${lng.toFixed(5)})`;

    const apiKey = 'AIzaSyCRNGuuF_BkpRIcuIP1nFa5uQ2W1UqxWms'; // Substitua pela sua chave real
    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${apiKey}`;

    try {
        const response = await fetch(url);
        const data = await response.json();

        if (data.status === "OK") {
            const enderecoCompleto = data.results[0].formatted_address;

            let taxa = 0;
            if (/Zimpeto|Tsalala|Zonal Norte|Arredores/i.test(enderecoCompleto)) {
                taxa = 700;
            } else if (/Matola/i.test(enderecoCompleto)) {
                taxa = 500;
            } else if (/Maputo/i.test(enderecoCompleto)) {
                taxa = 300;
            }

            document.getElementById("taxa").value = taxa + " MT";
        } else {
            alert("Não foi possível obter o endereço.");
        }
    } catch (error) {
        alert("Erro ao buscar endereço: " + error.message);
    }
}




                    // Função para exibir mensagens e removê-las automaticamente
                    function showMessage(message, type) {
                        const flashMessage = document.getElementById("flashMessage");

                        // Criar a mensagem
                        flashMessage.innerHTML = `
                        <div class="alert alert-${type} alert-dismissible fade show" role="alert" id="autoDismissAlert">
                            ${message}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    `;

                        // Remover a mensagem automaticamente após 5 segundos
                        setTimeout(() => {
                            const alertBox = document.getElementById("autoDismissAlert");
                            if (alertBox) {
                                alertBox.classList.remove("show"); // Inicia a animação de fade out
                                setTimeout(() => alertBox.remove(), 300); // Remove do DOM após o fade
                            }
                        }, 5000);
                    }


                    document.addEventListener("DOMContentLoaded", () => {
                        const categoriaSelect = document.getElementById("pacote");
                        const subcategoriaContainer = document.getElementById("subpacote-container");
                        const subcategoriaSelect = document.getElementById("subpacote");
                        const produtosSelect = document.getElementById("tratamentos");
                        const precoInput = document.getElementById("preco_tratamentos");
                        const precoTotalText = document.getElementById("precoTotal");

                        const tratamentosDataElement = document.getElementById("tratamentosData");
                        const tratamentosData = JSON.parse(tratamentosDataElement.getAttribute("data-tratamentos"));

                        const dados = {};

                        tratamentosData.forEach(tratamento => {
                            if (!dados[tratamento.pacote]) dados[tratamento.pacote] = {};

                            if (tratamento.subpacote && tratamento.subpacote.trim() !== "" && tratamento.subpacote !== "Nenhum subpacote") {
                                if (!dados[tratamento.pacote].subpacotes) dados[tratamento.pacote].subpacotes = {};
                                if (!dados[tratamento.pacote].subpacotes[tratamento.subpacote]) dados[tratamento.pacote].subpacotes[tratamento.subpacote] = [];
                                dados[tratamento.pacote].subpacotes[tratamento.subpacote].push({
                                    value: tratamento.nome,
                                    text: tratamento.nome,
                                    preco: parseFloat(tratamento.preco) || 0
                                });
                            } else {
                                if (!dados[tratamento.pacote].produtos) dados[tratamento.pacote].produtos = [];
                                dados[tratamento.pacote].produtos.push({
                                    value: tratamento.nome,
                                    text: tratamento.nome,
                                    preco: parseFloat(tratamento.preco) || 0
                                });
                            }
                        });

                        categoriaSelect.addEventListener("change", () => {
                            const categoriaSelecionada = categoriaSelect.value;

                            subcategoriaSelect.innerHTML = "";
                            produtosSelect.innerHTML = "";
                            produtosSelect.disabled = true;
                            precoTotalText.textContent = "0.00";
                            precoInput.value = "";

                            if (dados[categoriaSelecionada]) {
                                const possuiSubpacotes = dados[categoriaSelecionada].subpacotes && Object.keys(dados[categoriaSelecionada].subpacotes).length > 0;

                                if (possuiSubpacotes) {
                                    subcategoriaContainer.classList.remove("d-none");
                                    subcategoriaSelect.disabled = false;
                                    subcategoriaSelect.innerHTML = `<option value="" disabled selected>Selecione um subpacote</option>`;

                                    Object.keys(dados[categoriaSelecionada].subpacotes).forEach(sub => {
                                        const option = document.createElement("option");
                                        option.value = sub;
                                        option.textContent = sub;
                                        subcategoriaSelect.appendChild(option);
                                    });

                                    subcategoriaSelect.addEventListener("change", () => {
                                        produtosSelect.innerHTML = "";
                                        produtosSelect.disabled = false;

                                        const subcategoriaSelecionada = subcategoriaSelect.value;
                                        const produtos = dados[categoriaSelecionada].subpacotes[subcategoriaSelecionada] || [];

                                        produtos.forEach(prod => {
                                            const option = document.createElement("option");
                                            option.value = prod.value;
                                            option.textContent = `${prod.text} - R$ ${prod.preco.toFixed(2)}`;
                                            option.dataset.preco = prod.preco;
                                            produtosSelect.appendChild(option);
                                        });
                                    });

                                } else {
                                    subcategoriaContainer.classList.add("d-none");
                                    subcategoriaSelect.disabled = true;
                                    produtosSelect.disabled = false;

                                    (dados[categoriaSelecionada].produtos || []).forEach(produto => {
                                        const option = document.createElement("option");
                                        option.value = produto.value;
                                        option.textContent = `${produto.text} -  ${produto.preco.toFixed(2)}MT`;
                                        option.dataset.preco = produto.preco;
                                        produtosSelect.appendChild(option);
                                    });
                                }
                            }
                        });

                        produtosSelect.addEventListener("change", () => {
    let total = 0;
    let precos = [];

    Array.from(produtosSelect.selectedOptions).forEach(opt => {
        const preco = parseFloat(opt.dataset.preco);
        if (!isNaN(preco)) {
            total += preco;
            precos.push(preco);
        }
    });

    // Pega o valor da taxa do input (removendo " MT" e convertendo para número)
    const taxaStr = document.getElementById("taxa").value;
    const taxaNum = parseFloat(taxaStr.replace(/\s*MT$/, ""));

    // Se for número válido, adiciona ao total
    if (!isNaN(taxaNum)) {
        total += taxaNum;
    }

    precoInput.value = JSON.stringify(precos);
    precoTotalText.textContent = total.toFixed(2);
});

                    });


                </script>

                <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCRNGuuF_BkpRIcuIP1nFa5uQ2W1UqxWms&callback=initMap"
    async defer></script>



    </body>

</html>